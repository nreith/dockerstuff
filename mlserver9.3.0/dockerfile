FROM phusion/baseimage:latest
LABEL maintaner=nreith@gmail.com
# Use Bash as Default Shell instead of sh
SHELL ["/bin/bash", "-c"]
# Run as root
USER root

# Other Environment variables
ENV LC_ALL=en_US.UTF-8 \
LANG=en_US.UTF-8 \
LANGUAGE=en_US.UTF-8 \
DEBIAN_FRONTEND=noninteractive \
TZ=America/Chicago \
TERM=xterm-256color \
PYTHONIOENCODING=utf-8 \
LANG=en_US.UTF-8 \
JOBLIB_TEMP_FOLDER=/tmp \
LC_ALL=en_US.UTF-8

RUN \
# Add User
    groupadd -g 12574 ubuntu && \
    useradd -u 12574 -g 12574 -m -N -s /bin/bash ubuntu && \
# Environment Variables and Paths
    echo 'LC_ALL="en_US.UTF-8"' >> /home/ubuntu/.bashrc && \
    echo 'LANG="en_US.UTF-8"' >> /home/ubuntu/.bashrc && \
    echo 'LANGUAGE="en_US.UTF-8"' >> /home/ubuntu/.bashrc && \
    echo 'DEBIAN_FRONTEND="noninteractive"' >> /home/ubuntu/.bashrc && \
    echo 'TZ="America/Chicago"' >> /home/ubuntu/.bashrc && \
    echo 'TERM="xterm-256color"' >> /home/ubuntu/.bashrc && \
    echo 'PYTHONIOENCODING="utf-8"' >> /home/ubuntu/.bashrc && \
    echo 'LANG="en_US.UTF-8"' >> /home/ubuntu/.bashrc && \
    echo 'JOBLIB_TEMP_FOLDER="/tmp "' >> /home/ubuntu/.bashrc && \
    echo 'LC_ALL="en_US.UTF-8"' >> /home/ubuntu/.bashrc && \
    source /home/ubuntu/.bashrc && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    apt-utils \
    apt-transport-https \
    bash-completion \
    build-essential \
    ca-certificates \
    curl \
    dialog \
    ed \
    file \
    fonts-texgyre \
    g++ \
    gfortran \
    git \
    gsfonts \
    less \
    libbz2-1.0 \
    libcurl3 \
    libgomp1 \
    libopenblas-dev \
    libpango1.0-0 \
    libpcre3 \
    libpng16-16 \
    libtiff5 \
    liblzma5 \
    libsm6 \
    libxt6 \
    libzmq3-dev \
    locales \
    make \
    nano \
    net-tools \
    nodejs \
    openssh-server \
    python-software-properties \
    software-properties-common \
    tzdata \
    tmux \
    unzip \
    vim \
    wget \
    zip \
    zlib1g && \
# Some ubuntu Config
    echo "export TERM=xterm-256color" >> /home/ubuntu/.bashrc && \
    echo "export DEBIAN_FRONTEND=noninteractive" >> /home/ubuntu/.bashrc && \
    echo "Chicago/USA" > /etc/timezone && \
    dpkg-reconfigure --frontend noninteractive tzdata && \
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && \
    locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8 LC_MESSAGES=POSIX && dpkg-reconfigure locales && \
    apt-get update && \
    cd /tmp && . /etc/os-release && \
# Fix annoying "writing more than expected" error with apt/apt-get when using corporate proxy
    echo "Acquire::http::Pipeline-Depth 0;" > /etc/apt/apt.conf.d/99fixbadproxy && \
    echo "Acquire::http::No-Cache true;" >> /etc/apt/apt.conf.d/99fixbadproxy && \
    echo "Acquire::BrokenProxy true;" >> /etc/apt/apt.conf.d/99fixbadproxy && \
    apt-get update -o Acquire::CompressionTypes::Order::=gz && \
    echo "Acquire::http::proxy \"$http_proxy\";" > /etc/apt/apt.conf && \
    echo "Acquire::https::proxy \"$https_proxy\";" >> /etc/apt/apt.conf && \
    echo "Acquire::ftp::proxy \"$http_proxy\";" >> /etc/apt/apt.conf && \
    apt-get clean && apt-get update && \
# Annoying but benign: "W: mdadm: /etc/mdadm/mdadm.conf defines no arrays."
    mkdir -p /etc/mdadm && \
    touch /etc/mdadm/mdadm.conf && \
    echo "ARRAY <ignore> devices=/dev/sda" >> /etc/mdadm/mdadm.conf && \
# Install Oracle Java 8
    add-apt-repository ppa:webupd8team/java && \
    apt-get update -y && \
    echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \
    apt-get install -y oracle-java8-installer && \
    apt-get install oracle-java8-set-default && \
# ML SERVER 9.3.0
    apt-get install -y --no-install-recommends apt-transport-https wget && \
    echo 'LD_LIBRARY_PATH="/opt/microsoft/mlserver/9.3.0/runtime/R/lib:$LD_LIBRARY_PATH"' >> /home/ubuntu/.bashrc && \
    echo 'PATH="/opt/microsoft/mlserver/9.3.0/runtime/python/bin:/opt/microsoft/mlserver/9.3.0/runtime/R/bin:$PATH"' >> /home/ubuntu/.bashrc && \
    echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ xenial main" | tee /etc/apt/sources.list.d/azure-cli.list && \
    echo "alias python=mlserver-python" >> /home/ubuntu.bashrc && \
    echo "alias python3=mlserver-python" >> /home/ubuntu.bashrc && \
    echo "alias R=Revo64" >> /home/ubuntu.bashrc && \
    source /home/ubuntu/.bashrc && \
    wget https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb -O /tmp/prod.deb && \
    dpkg -i /tmp/prod.deb && \
    rm -f /tmp/prod.deb && \
    # apt-key adv --keyserver packages.microsoft.com --recv-keys 52E16F86FEE04B979B07E28DB02C46DF417A0893 && \
    # The one above for ms doesn't work, so using the ubuntu key below
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 52E16F86FEE04B979B07E28DB02C46DF417A0893 && \
    apt-get -y update --fix-missing && \
    apt-get install -y microsoft-r-open-foreachiterators-3.4.3 && \
    apt-get install -y microsoft-r-open-mkl-3.4.3 && \
    apt-get install -y microsoft-r-open-mro-3.4.3 && \
    apt-get install -y microsoft-mlserver-packages-r-9.3.0 && \
    apt-get install -y microsoft-mlserver-python-9.3.0 && \
    apt-get install -y microsoft-mlserver-packages-py-9.3.0 && \
    apt-get install -y microsoft-mlserver-mml-r-9.3.0 && \
    apt-get install -y microsoft-mlserver-mml-py-9.3.0 && \
    apt-get install -y microsoft-mlserver-mlm-r-9.3.0 && \
    apt-get install -y microsoft-mlserver-mlm-py-9.3.0 && \
    apt-get install -y azure-cli=2.0.26-1~xenial && \
    apt-get install -y dotnet-runtime-2.0.0 && \
    apt-get install -y microsoft-mlserver-adminutil-9.3.0 && \
    apt-get install -y microsoft-mlserver-config-rserve-9.3.0 && \
    apt-get install -y microsoft-mlserver-computenode-9.3.0 && \
    apt-get install -y microsoft-mlserver-webnode-9.3.0 && \
    apt-get clean && \
    /opt/microsoft/mlserver/9.3.0/bin/R/activate.sh && \
# Layer Cleanup
    rm -rf /tmp/* && \
    apt-get autoremove -y && \
    apt-get autoclean -y && \
    rm -rf /var/lib/apt/lists/*
