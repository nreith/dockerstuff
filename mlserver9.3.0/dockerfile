
# Image Name:
# ubuntu16.04-mlserver9.3.0-py3.5
#############################################################################################
# Ubuntu-16.04 with simple basics
# + Microsoft ML Server 9.3.0
# + MS SQL Server 17 and Teradata 16.20 drivers

# Docker Build Config
#############################################################################################

FROM ubuntu:16.04

LABEL maintaners="Nick Reith <nreith@gmail.com>"
SHELL ["/bin/bash", "-c"]
USER root
ENV \
  TERM="xterm" \
  TZ="US/Central" \
  DEBIAN_FRONTEND="noninteractive"

# Ubuntu Config
#############################################################################################

RUN \
# Add User
  groupadd -g 12574 ubuntu && \
  useradd -u 12574 -g 12574 -m -N -s /bin/bash ubuntu && \
#
# Installing apt-utils first to avoid error message
  apt-get clean && apt-get update && apt-get install -y apt-utils --no-install-recommends && \
#
# Commonly installed packages
  apt-get install -y --no-install-recommends \
    apt-transport-https \
    build-essential \
    ca-certificates \
    curl \
    dialog `useful user dialogs` \
    file `recognizes filetype` \
    git \
    gnupg `for pgp keys` \
    iputils-ping `network testing` \
    locales `internationalization` \
    nano `easy text editor` \
    net-tools `ifconfig, etc.` \
    openssh-server \
    rsync `to sync for git/azure workflow` \
    software-properties-common `necessary` \
    unzip \
    vim `only 1mb` \
    wget \
    zip && \
    # Trying to slim down a bit
    # python-software-properties \ 
    # bash-completion \
    # fonts-texgyre \
#
# Install Open Java Runtime (Default = 8) (Untested with Domino)
  apt-get install -y --no-install-recommends default-jre && \
#
# Timezone / Locale stuff
  ln -fs /usr/share/zoneinfo/America/Chicago /etc/localtime && \
  export DEBIAN_FRONTEND=noninteractive && \
  apt-get install -y tzdata locales && \
  dpkg-reconfigure --frontend noninteractive tzdata && \
  echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && \
  locale-gen en_US.UTF-8 && update-locale LANG="en_US.UTF-8" LC_MESSAGES="POSIX" && \
  dpkg-reconfigure --frontend noninteractive locales && \
  cd /tmp && cat /etc/os-release && \
#
  echo 'export DEBIAN_FRONTEND="noninteractive"' >> /home/ubuntu/.bashrc && \
  echo 'export LC_ALL="en_US.UTF-8"' >> /home/ubuntu/.bashrc && \
  echo 'export LANG="en_US.UTF-8"' >> /home/ubuntu/.bashrc && \
  echo 'export LANGUAGE="en_US.UTF-8"' >> /home/ubuntu/.bashrc && \
  echo 'export TZ="US/Central"' >> /home/ubuntu/.bashrc && \
  echo 'export PYTHONIOENCODING="utf-8"' >> /home/ubuntu/.bashrc && \
  echo 'export LANG="en_US.UTF-8"' >> /home/ubuntu/.bashrc && \
  echo 'export TERM="xterm-256color"' >> /home/ubuntu/.bashrc && \
  echo 'export JOBLIB_TEMP_FOLDER="/tmp"' >> /home/ubuntu/.bashrc && \
#
# ML SERVER + DB Drivers Installs and Configs
#############################################################################################
#
  source /home/ubuntu/.bashrc && \
  # Set the location of the package repo the "prod" directory containing the distribution.
  cd /tmp && wget https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb && \
  # Register the repo
  dpkg -i packages-microsoft-prod.deb && \
  # Verify whether the "microsoft-prod.list" configuration file exists
  ls -la /etc/apt/sources.list.d/ && \
  # Install ML Server Python Components, minus optional pre-trained models
  # and web/compute node or server admin stuff
  apt-get -y update --fix-missing && \
  apt-get install -y microsoft-mlserver-python-9.3.0 && \
  # Tried to remove below, but revoscalepy is needed at least for the privacy thing below
  apt-get install -y microsoft-mlserver-packages-py-9.3.0 && \
  echo "export PATH=\"/opt/microsoft/mlserver/9.3.0/runtime/python/bin:$PATH\"" >> /home/ubuntu/.bashrc && \
  export PATH="/opt/microsoft/mlserver/9.3.0/runtime/python/bin:$PATH" && \
  source /home/ubuntu/.bashrc && \
  # Turn off anonymous telemtry for MS ML Server
  mlserver-python -c 'import revoscalepy; revoscalepy.rx_privacy_control(False)' && \
#
# Conda config (add conda-forge channel)
  conda config --prepend channels conda-forge && \
  cp /root/.condarc /home/ubuntu/.condarc && \
# Capture pip freeze and conda list of current packages before anything changes (i.e. conda clean tipsy at the bottom)
  echo "# pip freeze of original versions\n" > /opt/microsoft/mlserver/.pipfreeze_original && \
  pip freeze >> /opt/microsoft/mlserver/.pipfreeze_original && \
  echo "# conda list of original versions\n" > /opt/microsoft/mlserver/.condalist_original && \
  conda list >> /opt/microsoft/mlserver/.condalist_original && \
# Azure CLI
# Requires the following, but already installed: ca-certificates curl apt-transport-https lsb-release gnupg
  apt-get update && apt-get install azure-cli && \
#
# MS SQL ODBC Server Drivers
  cd /tmp && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
  curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/microsoft-prod.list && \
  apt-get update -y && \
  ACCEPT_EULA=Y apt-get install -y --no-install-recommends msodbcsql17 && \
  # optional: for bcp and sqlcmd
  ACCEPT_EULA=Y apt-get install -y --no-install-recommends mssql-tools && \
  echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> /home/ubuntu/.bashrc && \
  # optional: for unixODBC development headers
  apt-get install -y --no-install-recommends unixodbc-dev && \
  echo '' >> /etc/odbcinst.ini && \
  echo '[ODBC Driver 17 for SQL Server]' >> /etc/odbcinst.ini && \
  echo 'Description=Microsoft ODBC Driver 17 for SQL Server' >> /etc/odbcinst.ini && \
  echo 'Driver=/opt/microsoft/msodbcsql17/lib64/libmsodbcsql-17.2.so.0.1' >> /etc/odbcinst.ini && \
  echo 'Threading=1' >> /etc/odbcinst.ini && \
  echo 'UsageCount=1' >> /etc/odbcinst.ini && \
  echo '' >> /etc/odbcinst.ini && \
#
# Teradata ODBC                                                                                                                   # TD
  cd /tmp && wget https://stuff-for-devops.s3.amazonaws.com/dbdrivers/tdodbc1620__linux_indep.16.20.00.68-1.tar.gz && \
  tar -xf tdodbc1620__ubuntu_indep.16.20.00.18-1.tar.gz && \
  apt-get -f install -y --no-install-recommends lib32stdc++6 lib32gcc1 libc6-i386 && \
  cd /tmp/tdodbc1620 && dpkg -i tdodbc1620-16.20.00.18-1.noarch.deb && \
  echo '' >> /etc/odbcinst.ini && \
  echo '[Teradata ODBC Driver 16.20]' >> /etc/odbcinst.ini && \
  echo 'Description=Teradata Database ODBC Driver 16.20' >> /etc/odbcinst.ini && \
  echo 'Driver=/opt/teradata/client/ODBC_64/lib/tdataodbc_sb64.so' >> /etc/odbcinst.ini && \
  echo '# Note: Currently, Data Direct Driver Manager does not support Connection Pooling feature.' >> /etc/odbcinst.ini && \
  echo '' >> /etc/odbcinst.ini && \
#
# make .bashrc work for root too
  cat /home/ubuntu/.bashrc > /root/.bashrc && \
# Ensure user permissions on certain folders to allow conda/pip installs
  chown -R ubuntu:ubuntu /home/ubuntu/ && chown -R ubuntu:ubuntu /opt && chown -R ubuntu:ubuntu /tmp && \
# Layer Cleanup
  apt-get clean && apt-get autoclean && apt-get autoremove && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && conda clean -tipsy
